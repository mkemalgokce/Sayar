import ProjectDescription
import ProjectDescriptionHelpers

let allBuildTargets: [TargetReference] = [
    .project(path: "App", target: "Sayar")
] + SharedModule.allCases.map { TargetReference.project(path: $0.path, target: $0.name) }
    + FeatureModule.allCases.map { TargetReference.project(path: $0.path, target: $0.name) }

let allTestTargets: [TestableTarget] = [
    .testableTarget(target: .project(path: "App", target: "SayarTests")),
    .testableTarget(target: .project(path: "App", target: "SayarUITests"))
] + SharedModule.allCases
    .map { TestableTarget.testableTarget(target: .project(path: $0.path, target: "\($0.name)Tests")) }
    + FeatureModule.allCases.map { TestableTarget.testableTarget(target: .project(
        path: $0.path,
        target: "\($0.name)Tests"
    )) }

let workspace = Workspace(
    name: "Sayar",
    projects: [
        "App",
        "Shared/**",
        "Features/**"
    ],
    schemes: [
        Scheme.scheme(
            name: "Sayar-Workspace-Dev",
            buildAction: .buildAction(targets: allBuildTargets),
            testAction: .targets(
                allTestTargets,
                configuration: "Dev",
                options: .options(
                    coverage: true,
                    codeCoverageTargets: allBuildTargets
                )
            ),
            runAction: .runAction(configuration: "Dev"),
            archiveAction: .archiveAction(configuration: "Dev")
        ),
        Scheme.scheme(
            name: "Sayar-Workspace-UAT",
            buildAction: .buildAction(targets: allBuildTargets),
            testAction: .targets(
                allTestTargets,
                configuration: "UAT",
                options: .options(
                    coverage: true,
                    codeCoverageTargets: allBuildTargets
                )
            ),
            runAction: .runAction(configuration: "UAT"),
            archiveAction: .archiveAction(configuration: "UAT")
        ),
        Scheme.scheme(
            name: "Sayar-Workspace-Prod",
            buildAction: .buildAction(targets: allBuildTargets),
            testAction: .targets(
                allTestTargets,
                configuration: "Prod",
                options: .options(
                    coverage: true,
                    codeCoverageTargets: allBuildTargets
                )
            ),
            runAction: .runAction(configuration: "Prod"),
            archiveAction: .archiveAction(configuration: "Prod")
        )
    ],
    generationOptions: .options(
        enableAutomaticXcodeSchemes: false,
        autogeneratedWorkspaceSchemes: .disabled
    )
)
