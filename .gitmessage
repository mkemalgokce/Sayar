# <type>(<scope>): <subject>
#
# <body>
#
# <footer>

# Type should be one of the following:
# * feat: A new feature
# * fix: A bug fix
# * docs: Documentation only changes
# * style: Changes that do not affect the meaning of the code
# * refactor: A code change that neither fixes a bug nor adds a feature
# * perf: A code change that improves performance
# * test: Adding missing tests or correcting existing tests
# * chore: Changes to the build process or auxiliary tools
# * ci: Changes to CI configuration files and scripts
# * build: Changes that affect the build system or external dependencies
# * revert: Reverts a previous commit

# Scope is optional and should be the name of the package affected
# (as perceived by the person reading the changelog generated from commit messages)

# Subject line should:
# * use the imperative, present tense: "change" not "changed" nor "changes"
# * not capitalize first letter
# * not end with a dot (.)
# * be no more than 50 characters

# Body should include the motivation for the change and contrast this with previous behavior

# Footer should contain any information about Breaking Changes
# and is also the place to reference GitHub issues that this commit Closes

# Breaking Changes should start with the word BREAKING CHANGE: with a space or two newlines.
# The rest of the commit message is then used for this.

# Examples:
# feat(auth): add login functionality
# fix(api): resolve null pointer exception in user service
# docs: update README with installation instructions
# style: fix code formatting in UserController
# refactor(database): optimize query performance
# test(auth): add unit tests for login validation